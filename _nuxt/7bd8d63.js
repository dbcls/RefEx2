(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{439:function(t,e,r){var content=r(472);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,r(31).default)("7c0ee678",content,!0,{sourceMap:!1})},471:function(t,e,r){"use strict";r(439)},472:function(t,e,r){var n=r(30)(!1);n.push([t.i,".classification_wrapper .fixed_select[data-v-4d69ab13]{cursor:pointer;width:70%;font-size:22px;font-width:normal;padding:4px;background:#f5f7f9;border:none;border-radius:.2rem;transition:.6s}.classification_wrapper .fixed_select[data-v-4d69ab13]:focus{outline:none}.classification_wrapper .fixed_select[data-v-4d69ab13]:hover{background-color:#488ec4;color:#fff;transition:all .3s}",""]),t.exports=n},479:function(t,e,r){"use strict";r.r(e);r(32),r(57),r(49),r(38),r(14),r(39),r(54),r(55),r(50),r(41),r(58),r(43),r(27),r(59),r(42);var n=r(13),o=r(22),c=(r(77),r(33),r(72));function l(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(!t)return;if("string"==typeof t)return f(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return f(t,e)}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var i=0,n=function(){};return{s:n,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,c=!0,l=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return c=t.done,t},e:function(t){l=!0,o=t},f:function(){try{c||null==r.return||r.return()}finally{if(l)throw o}}}}function f(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,r=new Array(e);i<e;i++)r[i]=t[i];return r}function m(object,t){var e=Object.keys(object);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(object);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(object,t).enumerable}))),e.push.apply(e,r)}return e}function d(t){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?m(Object(source),!0).forEach((function(e){Object(o.a)(t,e,source[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(source)):m(Object(source)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(source,e))}))}return t}var v={data:function(){return{parameters:{},autoComplete:{},autocompleteStaticData:{},debounce:null}},computed:d(d({},Object(c.b)({filterByName:"filter_by_name",activeDataset:"active_dataset"})),{},{description:function(){return this.filterByName("sample").description},dataSetSpecificParameters:function(){return this.activeDataset.sample},filters:function(){var t,e;return null!==(t=null===(e=this.dataSetSpecificParameters)||void 0===e?void 0:e.filter)&&void 0!==t?t:[]}}),watch:{activeDataset:function(){this.parameters={},this.setAutoComplete(),this.initiateParametersDataset()}},created:function(){var t=this;return Object(n.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t.getAutoCompleteData().then((function(){t.initiateParametersDataset(),t.setAutoComplete()}));case 1:case"end":return e.stop()}}),e)})))()},methods:d(d({},Object(c.c)({setAlertModal:"set_alert_modal"})),{},{initiateParametersDataset:function(){var t,e=l(this.filters);try{for(e.s();!(t=e.n()).done;){var r=t.value.column;this.$set(this.parameters,r,""),this.autoComplete[r]||this.$set(this.autoComplete,r,[])}}catch(t){e.e(t)}finally{e.f()}this.$emit("updateParameters",d({},this.parameters))},getAutoCompleteData:function(){var t=this;return this.$axios.$get("api/cv").then((function(data){t.autocompleteStaticData=data})).catch((function(e){t.setAlertModal({msg:"Failed to get data in Screener View Sample"})}))},setAutoComplete:function(){var t=this;this.filters.forEach((function(filter){t.$set(t.autoComplete,filter.column,filter.is_checkbox&&t.autocompleteStaticData[t.activeDataset.dataset]?t.autocompleteStaticData[t.activeDataset.dataset][filter.column]:[])}))},toggleScreener:function(){this.isOpen=!this.isOpen},updateParameter:function(t,e){t&&e&&this.$set(this.parameters,t,e),this.$emit("updateParameters",this.parameters)}})},h=(r(471),r(37)),component=Object(h.a)(v,(function(){var t=this,e=t._self._c;return e("div",[""!==t.description?e("h3",[t._v("\n    "+t._s(t.description)+"\n  ")]):t._e(),t._v(" "),t.filters&&t.filters.length>0?e("div",{staticClass:"classification_wrapper"},t._l(t.filters,(function(filter,r){return e("div",{key:"".concat(r+1,"_test")},[e("h4",{key:"".concat(r+1,"_gene_h3")},[t._v("\n        "+t._s(filter.label)+"\n        "),filter.note?e("span",{staticClass:"tag"},[t._v(t._s(filter.note))]):t._e(),t._v(" "),filter.examples?e("span",{staticClass:"example"},[t._v("\n          e.g.\n          "),t._l(filter.examples,(function(r,n){return[e("span",{key:"".concat(n,"_example"),staticClass:"sample_value",on:{click:function(e){return t.updateParameter(filter.column,r)}}},[t._v("\n              "+t._s(r)+"\n            ")]),t._v(" "),n<filter.examples.length-1?e("span",{key:"".concat(n,"_separator")},[t._v(",")]):t._e()]}))],2):t._e()]),t._v(" "),filter.is_checkbox?e("select",{directives:[{name:"model",rawName:"v-model",value:t.parameters[filter.column],expression:"parameters[filter.column]"}],staticClass:"fixed_select",on:{change:[function(e){var r=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){return"_value"in t?t._value:t.value}));t.$set(t.parameters,filter.column,e.target.multiple?r:r[0])},function(e){return t.updateParameter(filter.column,e.target.value)}]}},[e("option",{attrs:{value:"",label:""}}),t._v(" "),t._l(t.autoComplete[filter.column],(function(option,t){return e("option",{key:t,attrs:{label:option},domProps:{value:option}})}))],2):e("input",{directives:[{name:"model",rawName:"v-model",value:t.parameters[filter.column],expression:"parameters[filter.column]"}],key:"".concat(r+1,"_gene_tags"),staticClass:"text_search_sample_types",attrs:{placeholder:filter.examples?filter.examples[0]:""},domProps:{value:t.parameters[filter.column]},on:{input:[function(e){e.target.composing||t.$set(t.parameters,filter.column,e.target.value)},function(e){return t.updateParameter(filter.column,t.parameters[filter.column])}]}})])})),0):t._e()])}),[],!1,null,"4d69ab13",null);e.default=component.exports}}]);